@model Search_n_View.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Create User";


}

@section styles {
    <link href="~/Content/bootstrap-select.css" rel="stylesheet" />
    <style>
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        input[type=number] {
            -moz-appearance: textfield;
        }

        .select2-search__field, .select2-search__field2 {
            height: 32px !important;
            margin-top: -3px !important;
            font-size: 12px !important;
        }

        .btn-light {
            background-color: white !important;
            color: dimgray !important;
        }
    </style>
}



<div>
    <div class="animated fadeIn">
        <div class="row">
            <div class="col-sm-3"></div>
            <div class="col-sm-6">
                @using (Html.BeginForm("CreateUser", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    <div class="card">
                        <div class="card-header">
                            <h5>@ViewBag.Title</h5>
                        </div>
                        <div class="card-body">
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary("", new { @class = "text-danger" })

                            <div class="form-group row">
                                @Html.LabelFor(m => m.FirstName, new { @class = "col-md-3 col-form-label font-weight-bold" })
                                <span style="color: #f86c6b;font-weight:bold;font-size:20px;">*</span>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @placeholder = "Enter First Name", tabindex = 1 })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(m => m.LastName, new { @class = "col-md-3 col-form-label font-weight-bold" })
                                <span style="color: #f86c6b;font-weight:bold;font-size:20px;">*</span>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Enter Last Name", tabindex = 2 })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(m => m.UserName, new { @class = "col-md-3 col-form-label font-weight-bold" })
                                <span style="color: #f86c6b;font-weight:bold;font-size:20px;">*</span>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "Enter User Name", tabindex = 3 })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(m => m.Email, new { @class = "col-md-3 col-form-label font-weight-bold" })
                                <span style="color: #f86c6b;font-weight:bold;font-size:20px;">*</span>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Enter User Email", tabindex = 4 })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(m => m.RolesList, new { @class = "col-md-3 col-form-label font-weight-bold" })
                                <span style="color: #f86c6b;font-weight:bold;font-size:20px;">*</span>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.RoleId, Model.RolesList, "Select Role", new { @class = "form-control", tabindex = 7 })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(m => m.AccessGroup, new { @class = "col-md-3 col-form-label font-weight-bold" })
                                <span style="color: #f86c6b;font-weight:bold;font-size:20px;">*</span>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.AcId, Model.AccessGroup, "Select Access Rights", new { @class = "form-control", tabindex = 8 })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(m => m.MdId, new { @class = "col-md-3 col-form-label font-weight-bold" })
                                <span style="color: #f86c6b;font-weight:bold;font-size:20px;">*</span>
                                <div class="col-md-8">

                                    @Html.DropDownListFor(model => model.MdId, Model.Departments, htmlAttributes: new {@class = "form-control selectpicker DepartmentList select2-search__field2", @title = "Select Department", @multiple= "multiple",data_live_search = "true",  tabindex = 9 })

                                </div>
                            </div>
                            <div class="form-group row ItemShow" style="display:none">
                                    @Html.LabelFor(m => m.ItId, new { @class = "col-md-3 col-form-label font-weight-bold" })
                                    <span style="color: #f86c6b;font-weight:bold;font-size:20px;">*</span>
                                    <div class="col-md-8 ItemTypeListBox">
                                       
                                    </div>
                                </div>

                            <div class="form-group row">
                                @Html.LabelFor(m => m.Password, new { @class = "col-md-3 col-form-label font-weight-bold" })
                                <span style="color: #f86c6b;font-weight:bold;font-size:20px;">*</span>
                                <div class="col-md-8">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Enter User Password", tabindex = 11 })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 col-form-label font-weight-bold" })
                                <span style="color: #f86c6b;font-weight:bold;font-size:20px;">*</span>
                                <div class="col-md-8">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Enter Confirm Password", tabindex = 12 })
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button class="btn btn-md btn-primary mr-3" type="submit" tabindex="13">
                                <i class="fa fa-dot-circle-o"></i> Create
                            </button>
                            <a class="btn btn-md btn-primary ml-3" href="@Url.Action("Index", "User")" tabindex="14">
                                <i class="fa fa-close"></i> Cancel
                            </a>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/bootstrap-select.min.js"></script>
    <script>
        $(document).ready(function () {


             $(".DepartmentList").change(function () {
                 if ($(".DepartmentList option:selected").val() > 0) {
                     $(".ItemTypeListBox").html("");
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetItemTypes","User")',
                        data: { DepartmentId: parseInt($(".DepartmentList option:selected").val()) },
                        success: function (data) {
                            var html = "<select class='form-control selectpicker ItemTypeList select2-search__field2' title='Select ItemType' multiple name='ItId'>";
                            for (var i = 0; i < data.length; i++) {
                               
                                html += "<option value="+parseInt(data[i].Id)+">"+data[i].Name+"</option>";
                            }
                            html += "</select>";
                            $(".ItemTypeListBox").append(html);
                            $('.ItemTypeList').selectpicker();
                            $(".ItemShow").show();

                        }
                    });
                }

            })

        })
        </script>

}
