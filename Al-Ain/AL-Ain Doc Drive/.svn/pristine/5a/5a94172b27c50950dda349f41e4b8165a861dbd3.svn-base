@model List<Search_n_View.ViewModels.DocumentQueueViewModel>
@{
    ViewBag.Title = "DocumentsQueue";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div>
    <div class="animated fadeIn">
        <div class="card">
            @if (ViewBag.User.IsMaker == false && ViewBag.User.IsChecker == false)
            {
                <div class="center">
                    <p class="lead">Nothing For You To Review</p>
                </div>
            }
            else
            {
                <div class="card-header">
                    <i class="fa fa-list"></i> Documents Queue
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover table-bordered  datatable">
                            <thead>
                                <tr>
                                    @*<th class="text-center">Document Name</th>*@
                                    @*<th class="text-center">Document Description</th>*@
                                    <th class="text-center">PolicyNo</th>
                                    <th class="text-center">Uploaded Time</th>
                                    <th class="text-center">Approval Time</th>
                                    <th class="text-center">Approved By</th>
                                    @*<th class="text-center">Channel</th>*@
                                    <th class="text-center">Comments</th>
                                    <th class="no-sort text-center">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    if (Model != null && Model.Any())
                                    {
                                        foreach (var item in Model)
                                        {
                                            <tr>
                                                @*@if (item.Document.Name != null && item.Document.Name != "")
                                                {
                                                    <td class="text-center">@item.Document.Name</td>
                                                }
                                                else
                                                {
                                                    <td class="text-center">-</td>
                                                }*@
                                                @*<td>@item.Description</td>*@
                                                @if (item.Document.NewPolicyNo != null && item.Document.NewPolicyNo != "")
                                                {
                                                   <td class="text-center">@item.Document.NewPolicyNo</td>
                                                }
                                                else {
                                                   <td class="text-center">@item.Document.OldPolicyNo</td>
                                                }
                                                <td class="text-center">@item.Document.AddedTime</td>
                                                @if (item.Status == 0)
                                                {
                                                    <td class="text-center"><span class="badge badge-warning"><i>Pending</i></span></td>
                                                    <td class="text-center"><span class="badge badge-warning"><i>Pending</i></span></td>
                                                }
                                                else if (item.Status == 2)
                                                {
                                                    <td class="text-center"><span class="badge badge-danger"><i>Rejected</i></span></td>
                                                    <td class="text-center"><span class="badge badge-danger"><i>Rejected</i></span></td>
                                                }
                                                else if (item.Status == 3)
                                                {
                                                    <td class="text-center"><span class="badge badge-warning"><i>Pending</i></span></td>
                                                    <td class="text-center"><span class="badge badge-warning"><i>Pending</i></span></td>
                                                }
                                                else
                                                {
                                                    <td class="text-center">@item.CheckedDate</td>
                                                    <td class="text-center"><span class="badge badge-info"><i>@item.CheckedBy</i></span></td>
                                                }
                                                @*<td class="text-center">@item.Document.PrShortName</td>*@
                                                <td class="text-center">
                                                    <button class="btn btn-sm btn-outline-info" onclick="ViewComments(@item.Id)">View</button>
                                                    <button class="btn btn-sm btn-outline-success" data-target="#commentModal" data-toggle="modal" data-id="@item.Id">Comment</button>
                                                </td>
                                                <td class="text-center">
                                                    @if (ViewBag.User.IsMaker == true)
                                                    {
                                                        if (item.Status == 1)
                                                        {
                                                            <span class="badge badge-success">Approved</span>
                                                        }
                                                        else if (item.Status == 2)
                                                        {
                                                            <span class="badge badge-danger">Rejected</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="badge badge-warning">Pending</span>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (item.Status == 1)
                                                        {
                                                            <span class="badge badge-success">Approved</span>

                                                        }
                                                        else if (item.Status == 2)
                                                        {
                                                            <span class="badge badge-danger">Rejected</span>
                                                        }
                                                        else
                                                        {
                                                            <button onclick="ApproveDocument(@item.Id)" class="btn btn-sm btn-success">Approve</button>
                                                            <button onclick="Reject(@item.Id)" class="btn btn-sm btn-danger">Reject</button>

                                                            <a class="btn btn-sm btn-primary DocDetailView" style="padding: .1rem .5rem;font-size:11px;font-weight:bold;" href="@Url.Action("SelectedDocumentDetail", "Document", new { DId = item.Document.Id, PendingView = true, QId = item.Id })" data-queueid="@item.Id" data-docid="@item.Document.Id" data-docpath="@item.Document.DocPath" alt="Docuemnt Detail" title="Document Detail" target="_blank">View</a>

                                                        }
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }


                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>
    </div>

</div>

<div>
    <div class="modal fade" id="commentModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        @using (Ajax.BeginForm("DoComment", "MCMapping", new AjaxOptions { OnSuccess = "OnCommentSuccess" }, new { @method = "Post" }))
        {
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">New Comment</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <input type="number" name="queueId" hidden="hidden" />
                    <div class="modal-body">
                        <textarea name="comment" id="txtComment" class="form-control" required></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<div class="modal fade" id="commentViewModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">All Comments</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section scripts
{



    <script type="text/javascript">

    $(document).ready(function () {
          $(document).on("click", ".DocDetailView", function () {
              if (localStorage.getItem("BackPageFilter") != null) {
                  localStorage.removeItem("BackPageFilter");
                }
            })

    })
        function ApproveDocument(QId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Approve This Document!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: '@Url.Action("Approve", "MCMapping")',
                        type: 'post',
                        contentType: 'application/x-www-form-urlencoded',
                        data: { "QId": QId },
                        success: function (data) {
                            if (data) {
                                Swal.fire({
                                    type: 'success',
                                    title: 'Approved!',
                                    text: 'Document Is Checked And Now Active.'
                                }).then((result) => {
                                    if (result.value) {
                                        location.reload();
                                    }
                                });
                            } else
                                alert("Something Went Wrong!")

                        },
                        error: function (jqXhr, textStatus, errorThrown) {
                            Swal.fire({
                                type: 'error',
                                title: 'Some error occured',
                                text: 'Please try again'
                            });
                        }
                    });

                }
            })
    }

        function Reject(QId) {
            Swal.fire({
                title: 'Reject(Editable)!',
                text: "You Can Also Recheck It",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Reject This Document!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: '@Url.Action("Reject", "MCMapping")',
                        type: 'post',
                        contentType: 'application/x-www-form-urlencoded',
                        data: { "QId": QId },
                        success: function (data) {
                            if (data) {
                                Swal.fire({
                                    type: 'success',
                                    title: 'Rejected(Pending)!',
                                    text: 'Document Is Marked Pending For Now!'
                                }).then((result) => {
                                    if (result.value) {
                                        location.reload();
                                    }
                                });
                            } else
                                alert("Somthing Went Wrong!")

                        },
                        error: function (jqXhr, textStatus, errorThrown) {
                            Swal.fire({
                                type: 'error',
                                title: 'Some error occured',
                                text: 'Please try again'
                            });
                        }
                    });

                }
            })
    }

        $('#commentModal').on('show.bs.modal', function (e) {
            $('#txtComment').val('');
            //get data-id attribute of the clicked element
            var bookId = $(e.relatedTarget).data('id');
            console.log(bookId);
            //populate the textbox
            $(e.currentTarget).find('input[name="queueId"]').val(bookId);
        });



        function OnCommentSuccess(response) {
            if (response)
            {
                $('#commentModal').modal('hide');
                Swal.fire({
                    type: 'success',
                    title: 'Comment Added!',
                    timer: 2000,
                    showCancelButton: false,
                    showConfirmButton: false
                })
            }
        }
        function ViewComments(Id) {

            $.ajax({
                url: '@Url.Action("ViewComments", "MCMapping")',
                type: 'post',
                contentType: 'application/x-www-form-urlencoded',
                data: { queueId: Id },
                success: function (response) {
                    $('#modalBody').html(response);
                    $('#commentViewModal').modal('show');
                }
            });
        }
    </script>
}

